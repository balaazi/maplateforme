parameters:
  photos_directory: '%kernel.project_dir%/public/uploads/photos'
  google_token_expiration: '%env(int:GOOGLE_TOKEN_EXPIRATION)%'

services:
  _defaults:
    autowire: true
    autoconfigure: true
    public: false

  App\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'

  # Authenticator pour l'authentification
  App\Security\AppAuthenticator:
    arguments:
      $userRepository: '@App\Repository\UserRepository'

  # Contrôleur pour les utilisateurs
  App\Controller\UserController:
    tags: ['controller.service_arguments']

  # Service pour l'envoi d'SMS
  App\Service\SmsService:
    arguments:
      $sid: '%env(TWILIO_SID)%'
      $authToken: '%env(TWILIO_AUTH_TOKEN)%'
      $from: '%env(TWILIO_FROM)%'

  # Service de notification des événements
  App\Service\EventNotificationService:
    arguments:
      $mailer: '@mailer.mailer'
      $userRepository: '@App\Repository\UserRepository'

  # Service de rappel
  App\Service\ReminderService: ~

  # Service pour l'authentification et l'interaction avec Google API (Client)
  App\Service\GoogleClientService:
    arguments:
      $clientId: '%env(GOOGLE_CLIENT_ID)%'
      $clientSecret: '%env(GOOGLE_CLIENT_SECRET)%'
      $redirectUri: '%env(GOOGLE_REDIRECT_URI)%'

  # Service pour la gestion des tokens d'authentification Google
  App\Service\GoogleTokenService:
    arguments:
      $requestStack: '@request_stack'
      $tokenExpiration: '%env(int:GOOGLE_TOKEN_EXPIRATION)%'
      $googleClient: '@Google_Client'  # Injection du service Google_Client

  # Définir Google_Client en tant que service avec une méthode de configuration via une factory
  Google_Client:
    class: Google_Client
    factory: ['@App\Service\GoogleClientFactory', 'createClient']
    arguments:
      - '%env(GOOGLE_CLIENT_ID)%'
      - '%env(GOOGLE_CLIENT_SECRET)%'
      - '%env(GOOGLE_REDIRECT_URI)%'
